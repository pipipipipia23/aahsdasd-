wait(5)
print("AAAAAAAAAAAAAAAAAAAAA")
repeat wait(1) until game.Players
repeat wait(1) until game.Players.LocalPlayer
repeat wait(1) until game.ReplicatedStorage
repeat wait(1) until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait(1) until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
local vu = game:GetService("VirtualUser")
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Hiepphamone/lowmap/main/lowmap"))()

getgenv().Builder = {
    Potion = {
        "PotionVendingMachine1",
        -- "DailyPotions",
    },
    Diamond = {
        "SmallDailyDiamonds",
    },
    Fruit = {
        "FruitVendingMachine1",
    },
    Enchant = {
        "EnchantVendingMachine1",
    },
    Flag = {
        "DailyItems",
    },
    Timedaycare = 0,
    time = {}
}

function create()
    if not isfile(plr.Name..".datas") then
        writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Builder))
    end
end

function LoadSetting()
    if isfile(plr.Name..".datas") then
        v = game:GetService("HttpService"):JSONDecode(readfile(plr.Name..".datas"))
        getgenv().Builder = v 
        return getgenv().Builder
    else
        create()
    end
end

function saveconfig()
    if isfile(plr.Name..".datas") then
        writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Builder))
    else
        if not isfile(plr.Name..".datas") then
            writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Builder))
        end
    end
end

create()
LoadSetting()

function dbuoi()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
        v.CanCollide = false
        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
    end
    
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetDescendants()) do
        if v:IsA("MeshPart") then
            v.CanCollide = false
            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
        end
    end
end

function attack()
    local a = {}
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
        for i1,v1 in pairs(v:GetChildren()) do
            if (v1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 60 then
                return v.Name
            end
        end
    end
end

function findcomet()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
        for i1,v1 in pairs(v:GetChildren()) do
            if tostring(v1.TextureID) == "rbxassetid://12647305097" then
                return v1
            end
        end
    end
    return false
end

function destroyvipzone()
    for i,v in pairs(workspace.Map["1 | Spawn"].INTERACT.BREAK_ZONES:GetChildren()) do
        if tostring(v.Position) == "214.12213134765625, 24.417156219482422, -587.1192626953125" then
            v:Destroy() 
        end
    end
end

destroyvipzone()

game:GetService("RunService").Heartbeat:Connect(function()
    spawn(function()
	    game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(attack())
    end)
end)

function hasunlockzones(name) 
    return Client.ZoneCmds.Owns(name)
end

function getnextmap()
    return Client.ZoneCmds.GetNextZone()
end

function getlastmap()
    if (getrank() < 5 and not hasunlockzones("Tiki")) or (getrank() >= 5) or getsubquestv2("best") then
        return Client.ZoneCmds.GetMaxOwnedZone()
    else
        return "Tiki"
    end
end

function formatclient(name)
    local pattern = " table: .*$"
    local result = name:gsub(pattern, "") 
    return result
end

function formatmap(text)
    local result = string.match(text, "| (.*)$")
    return result
end

function getlocation()
    for i,v in pairs(workspace.Map:GetChildren()) do
        if formatmap(v.Name) == formatclient(getlastmap()) and v:FindFirstChild("INTERACT") then
            return v.INTERACT.BREAKABLE_SPAWNS.Main
        end
    end
    return false
end

function getrank()
    return Client.Save.Get().Rank
end
-- Tiki

function mtfer()
    game:GetService("ReplicatedStorage").Network.Zones_RequestPurchase:InvokeServer(formatclient(getnextmap()))
    local a = Client.RebirthCmds.GetNextRebirth()
    local b = Client.RebirthCmds.Rebirth(tostring(a._id))
    pcall(dbuoi)
    if getquest() ~= "hatchlastpet" or getsubquestv2("unlock") then
        if (getrank() <= 3 and not hasunlockzones("Tiki")) or (getrank() >= 4 and not hasunlockzones("Tiki")) or getsubquestv2("unlock") then
            if ((getsubquestv2("comet") ~= true or findcomet() == false) and (getsubquestv2("conjars") ~= true or autocoinjar() == false)) or getsubquestv2("unlock") then
                if not hasunlockzones("Fire Dojo") then
                    game:GetService("ReplicatedStorage").Network.Zones_RequestPurchase:InvokeServer(formatclient(getnextmap()))
                end
            end
        end
    end
end

function unlockmapattk()
    pcall(mtfer)
end

function getmap(name)
    local a =  Client.MachineCmds.GetAll(name)
    return {a[1].ParentID, a[1].Pad.arrowPivot}
end

local location = {}

function getallvitri()
    for i,v in pairs(getgenv().Builder) do
        if i ~= "time" and i ~= "Flag" and type(v) ~= "number" then
            for i1,v1 in pairs(v) do
                location[v1] = {getmap(v1)[1], getmap(v1)[2]}
            end
        end
    end
    return location
end

function getlocation222()
    for i,v in pairs(workspace.Map:GetChildren()) do
        if v.INTERACT:FindFirstChild("BREAK_ZONES") then
            plr.Character.HumanoidRootPart.CFrame = v.INTERACT.BREAK_ZONES.BREAK_ZONE.CFrame
            wait(.1)
        end
    end
    return false
end

if not getgenv().Builder.time then
    getgenv().Builder.time = {} 
end

function getmachine(name)
    if Client.MachineCmds.Owns(name) and Client.MachineCmds.IsAllowedToOpen(name) then
        if not getgenv().Builder.time[name] then
            return {getallvitri()[name][1], getallvitri()[name][2],name}
        elseif getgenv().Builder.time[name] == 0 then
            return {getallvitri()[name][1], getallvitri()[name][2],name}
        end
    end
    return false
end

function getabc(parent)
    local a = false
    for i,v in pairs(getgenv().Builder[parent]) do
        if a == false then
            a = getmachine(v)
        end
    end
    return a
end

function detectquest(text1)
    local text = string.lower(text1)
    local number = tonumber(text:match("Hatch%s+(%d+)"))
    if string.find(text, "hatch") then
        if number then
            return "hatchlastpet"
        else
            return "hatchlastpet"
        end
    -- elseif string.find(text, "earn") then
    --     return "farm"
    -- elseif string.find(text, "unlock") then
    --     return "unlock1map"
    -- elseif string.find(text, "use") then
    --     return "useflags"
    -- elseif string.find(text, "break") then
    --     local extracted = text:match("%d+ (.+)")
    --     if extracted == "Coin Jars" then
    --         return "CoinJars"
    --     elseif extracted == "Comets" then
    --         return "Comets"
    --     else
    --         return "farm"
    --     end
    end
    return false
end

function getquest()
    local container = game:GetService("Players").LocalPlayer.PlayerGui.GoalsSide.Frame.Quests.QuestsGradient.QuestsHolder
    local a = false
    for i,v in pairs(container:GetChildren()) do
        if v.Name ~= "RankUpNotif" and v:IsA("Frame") and v.Visible == true and a == false then
            a = detectquest(v.Title.Text)
        end
    end
    return a 
end

function isdonequest()
    return game:GetService("Players").LocalPlayer.PlayerGui.GoalsSide.Frame.Quests.QuestsGradient.QuestsHolder.RankUpNotif.Visible
end

function insertegg()
    a = {}
    for i,v in pairs(workspace.__THINGS.Eggs.Main:GetChildren()) do
        table.insert(a, v)
    end
    
    local function getNumber(str)
        return tonumber(str:match("(%d+)"))
    end
    
    table.sort(a, function (str1, str2)
        return getNumber(str1.Name) > getNumber(str2.Name)
    end)
    
    return a
end

function getegg()
    for i,v in pairs(insertegg()) do
        if v.PriceHUD:FindFirstChild("PriceHUD") or v.PriceHUD:FindFirstChild("PriceHUDAvailable") then
            local bool = false
            if v.PriceHUD:FindFirstChild("PriceHUDAvailable") then
                bool = true
            end
            return {v.Name, bool, v.PriceHUD.CFrame * CFrame.new(0,0,-5)}
        end
    end
    return false
end

function getmaxhatch(nameegg)
    return Client.EggCmds.GetMaxHatch(nameegg)
end

function getnameegg(num)
    local a = require(game:GetService("ReplicatedStorage").Library.Util.EggsUtil)
    return a.GetIdByNumber(num)
end

function getnumberegg(string)
    local number = tonumber(string:match("(%d+)"))
    return number 
end

function getmaxhatch()
    return Client.EggCmds.GetMaxHatch()
end

local isCooldown = false

local function enuma()
    if not isCooldown then
        isCooldown = true
        game:GetService("VirtualInputManager"):SendKeyEvent(true, 101, false, game)
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, 101, false, game)
        wait(1)
        isCooldown = false
    end
end

local isCooldow2n = false

local function enuma2()
    if not isCooldow2n then
        isCooldow2n = true
        game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
        wait(1)
        isCooldow2n = false
    end
end

function getcoin() 
    local a = Client.Save.Get()
    for i,v in pairs(a.Inventory.Currency) do
        if type(v) == "table" and v.id == "Coins" then
            return v._am
        end
    end
    return 0
end

function click()
    game:GetService'VirtualUser':CaptureController()
    game:GetService'VirtualUser':Button1Down(Vector2.new(0, 0))
end
function dectect()
    if game:GetService("Players").LocalPlayer.PlayerGui.EggOpenAnimation:FindFirstChild("TapToOpen") then
        for i = 1 , 5 do
            click()
            wait(.1)
        end
    end
end

getgenv().coinsold = 0

function romanToNumber(roman)
    local numerals = {
        ["i"] = 1,
        ["v"] = 5,
        ["x"] = 10,
        ["l"] = 50,
        ["c"] = 100,
        ["d"] = 500,
        ["m"] = 1000
    }

    local total = 0
    local i = 1
    while i <= #roman do
        local current = numerals[roman:sub(i, i)]
        local next = numerals[roman:sub(i + 1, i + 1)]
        if next and current < next then
            total = total + next - current
            i = i + 2
        else
            total = total + current
            i = i + 1
        end
    end

    return total
end

function getquestsubquest(text1)
    local text = string.lower(text1)
    local number = tonumber(text:match("Hatch%s+(%d+)"))
    if string.find(text, "collect") then
        if string.find(text, "potions") or string.find(text, "potion") then
            table.insert(getgenv().tablequest,"collectpotion")
        end
        if string.find(text, "enchants") or string.find(text, "enchant") then
            table.insert(getgenv().tablequest,"enchant")
        end
    end
    if string.find(text, "complete") then

    end
    if string.find(text, "unlock") then
        table.insert(getgenv().tablequest,"unlock")
    end
    if string.find(text, "best") then
        table.insert(getgenv().tablequest,"best")
    end
    if string.find(text, "break") then
        if string.find(text, "comets") or string.find(text, "comet") then
            if string.find(text, "best") then
                table.insert(getgenv().tablequest,"bestcomet")
            else
                table.insert(getgenv().tablequest,"comet")
            end
        end
        if string.find(text, "coin jars") or string.find(text, "coin jar") then
            if string.find(text, "best") then
                table.insert(getgenv().tablequest,"bestconjars")
            else
                table.insert(getgenv().tablequest,"conjars")
            end
        end
    end
    if string.find(text, "use") then
        if string.find(text, "potions") then
            if string.find(text, "tier") then
                local extracted = text:match("tier (%a+)")
                table.insert(getgenv().tablequest,romanToNumber(extracted))
            else
                table.insert(getgenv().tablequest,"useanypotion")
            end
        end
        if string.find(text, "fruits") or string.find(text, "fruit") then
            table.insert(getgenv().tablequest,"usefruit")
        end
        if string.find(text, "flag") or string.find(text, "flags") then
            table.insert(getgenv().tablequest,"flags")
        end
    end
    if string.find(text, "upgrade") then
        if string.find(text,"enchant") or string.find(text,"enchants") then
            table.insert(getgenv().tablequest,"upgradesach")
        end
    end
    if string.find(text, "earn") then
        if string.find(text, "diamonds") then
            table.insert(getgenv().tablequest,"getdiamond")
        end
    end
end

function getsubquest()
    local container = game:GetService("Players").LocalPlayer.PlayerGui.GoalsSide.Frame.Quests.QuestsGradient.QuestsHolder
    getgenv().tablequest = {}
    for i,v in pairs(container:GetChildren()) do
        if v.Name ~= "RankUpNotif" and v:IsA("Frame") and v.Visible == true then
            getquestsubquest(v.Title.Text)
        end
    end
    return getgenv().tablequest
end

function potion(number)
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Potion._byUID) do
        if v._data.tn == number then
            return i
        end
    end
    return false
end

function randompotion(number)
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Potion._byUID) do
        if v._data.tn == 1 then
            return i
        end
    end
    return false
end

function getfruit()
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Fruit._byUID) do
        return i
    end
    return false
end

function getflag()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if string.find(v._data.id, "Flag") then
            return {v._data.id,i}
        end
    end
    return false
end

function changetimeoradd(name, time)
    if not getgenv().Builder.time then
        getgenv().Builder.time = {}
    end
    getgenv().Builder.time[name] = time
end

function getsubquestv2(text, num)
    if num == true then
        for i,v in pairs(getsubquest()) do
            if type(v) == "number" then
                return v
            end
        end
    end
    if table.find(getsubquest(), text) then
        return true
    end
    return false
end

getgenv().mtf = {
    potion = false, 
    fruit = false,
    merchan = false,
    comet = false, 
    conjar = false,
}
local blacklistcframe = {}

function tablefind(a,b)
    if table.find(a, b) then
        return true
    end
    return false
end

function autocoinjar()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].RandomEvents:GetChildren()) do
        if v:IsA("Part") and v.Name ~= "GiantJar" and not table.find(blacklistcframe, tostring(v.Jar.Potion)) then
            return v.Jar
        end
    end
    return false
end

function fireRemote(name, pos)
    print(type(pos))
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
    wait(5)
    if (plr.Character.HumanoidRootPart.Position - pos.Position).Magnitude < 5 then
        local args = {
            [1] = name,
            [2] = 1
        }
        local a = game:GetService("ReplicatedStorage").Network.VendingMachines_Purchase:InvokeServer(unpack(args))
        return a
    end
end

function autosubquest()
    if #getsubquest() > 0 and getrank() < 5 then
        if type(getsubquestv2("cac",true)) then
            if potion(getsubquestv2("cac",true)) ~= false then
                Client.PotionCmds.Consume(potion(getsubquestv2("cac",true)))
            end
        end
        if getsubquestv2("usefruit") then
            if getabc("Fruit") then
                getgenv().mtf.fruit = true
                if fireRemote(getabc("Fruit")[3], getabc("Fruit")[2]) == false then
                    getgenv().mtf.fruit = false
                    changetimeoradd(getabc("Fruit")[3], tick() + 16 * 60)
                end
            else
                getgenv().mtf.fruit = false
            end
            if getfruit() ~= false then
                Client.FruitCmds.Consume(getfruit())
            end
        else
            getgenv().mtf.fruit = false
        end
        if getsubquestv2("useanypotion") or getsubquestv2("collectpotion") then
            if getabc("Potion") then
                getgenv().mtf.potion = true
                if getabc("Potion")[3] == "DailyPotions" then
                    plr.Character.HumanoidRootPart.CFrame = getabc("Potion")[2] * CFrame.new(0,0,-5)
                    changetimeoradd(getabc("Potion")[3], tick() + 31 * 60)
                else
                    if fireRemote(getabc("Potion")[3], getabc("Potion")[2]) == false then
                        getgenv().mtf.potion = false
                        changetimeoradd(getabc("Potion")[3], tick() + 16 * 60)
                    end
                end
            else
                getgenv().mtf.potion = false
            end
            if not getsubquestv2("collectpotion") then
                if randompotion() ~= false then
                    Client.PotionCmds.Consume(randompotion())
                end
            end
        else
            getgenv().mtf.potion = false
        end
        if getsubquestv2("enchant") then
            if getabc("Enchant") then
                if fireRemote(getabc("Enchant")[3], getabc("Enchant")[2]) == false then
                    getgenv().mtf.merchan = false
                    changetimeoradd(getabc("Enchant")[3], tick() + 16 * 60)
                end
            else
                getgenv().mtf.merchan = false
            end
        else
            getgenv().mtf.merchan = false
        end
        if getsubquestv2("flags") then
            if getflag() ~= false then
                Client.ZoneFlagCmds.Consume(getflag()[1],getflag()[2])
            end
        end
        if getsubquestv2("comet") then
            if findcomet() ~= false then
                if (findcomet().Position - plr.Character.HumanoidRootPart.Position).Magnitude > 25 then
                    plr.Character.HumanoidRootPart.CFrame = findcomet().CFrame * CFrame.new(0,10,0)
                end
                game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(findcomet().Name)
                getgenv().mtf.comet = true
            else
                getgenv().mtf.comet = false
            end
            if getuid("Comet") then
                local args = {
                    [1] = getuid("Comet")
                }
                
                game:GetService("ReplicatedStorage").Network.Comet_Spawn:InvokeServer(unpack(args))
            end
        elseif getsubquestv2("bestcomet") then
            getgenv().mtf.comet = false
            wait(5)
            if getuid("Comet") then
                local args = {
                    [1] = getuid("Comet")
                }
                
                game:GetService("ReplicatedStorage").Network.Comet_Spawn:InvokeServer(unpack(args))
            end
        else
            getgenv().mtf.comet = false
        end
        if getsubquestv2("conjars") then
            if autocoinjar() ~= false then
                getgenv().mtf.conjar = true
                if (autocoinjar().Position - plr.Character.HumanoidRootPart.Position).Magnitude > 100 then
                    plr.Character.HumanoidRootPart.CFrame = autocoinjar().CFrame
                else
                    if hasunlockzones(Client.MapCmds.GetCurrentZone()) == false then
                        table.insert(blacklistcframe, tostring(autocoinjar().Potion))
                    end
                end
                local args = {
                    [1] = getcoinjar()
                }
                
                game:GetService("ReplicatedStorage").Network.CoinJar_Spawn:InvokeServer(unpack(args))
            else
                getgenv().mtf.conjar = false
                wait(5)
                local args = {
                    [1] = getcoinjar()
                }
                
                game:GetService("ReplicatedStorage").Network.CoinJar_Spawn:InvokeServer(unpack(args))
            end
        elseif getsubquestv2("bestconjars") then
            getgenv().mtf.conjar = false
            if getcoinjar() then
                local args = {
                    [1] = getcoinjar()
                }
                
                game:GetService("ReplicatedStorage").Network.CoinJar_Spawn:InvokeServer(unpack(args))
            end
        else
            getgenv().mtf.conjar = false
        end
    end
end

function getbag()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if v._data.id == "Gift Bag" then
            return true
        end
    end
    return false
end

function getuid(name)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if v._data.id == name then
            return i 
        end
    end
    return false
end

function getcoinjar()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if string.find(string.lower(v._data.id), "coin jar") then
            return i 
        end
    end
    return false
end

function autousegiftbag()
    if getbag() then
        local args = {
            [1] = "Gift Bag"
        }
        
        game:GetService("ReplicatedStorage").Network.GiftBag_Open:InvokeServer(unpack(args))
    end
end

function getstatus()
    for i,v in pairs(getgenv().mtf) do
        if v == true then
            return true
        end
    end
    return false
end

function resettime()
    for i,v in pairs(getgenv().Builder.time) do
        if tick() - v > 0 then
            getgenv().Builder.time[i] = 0
        end
    end
end

function getfoderlastmap()
    local a = nil
    local b = 0
    for i,v in pairs(workspace.Map:GetChildren()) do
        local number = tonumber(string.match(v.Name, "(%d+)"))
        local namemap = formatmap(v.Name)
        if number ~= nil and v:FindFirstChild("INTERACT") then
            if number > b and hasunlockzones(namemap) then
                b = number
                a = v.INTERACT.BREAKABLE_SPAWNS.Main
            end
        end
    end
    return a
end

function checkmail() 
    local tb = {
        [1] = {

        }
    }
    local a = game:GetService("ReplicatedStorage").Network["Mailbox: Get"]:InvokeServer()
    print(a)
    if type(a) == 'table' then
        for i,v in pairs(a.Inbox) do
            table.insert(tb[1], v.uuid)
        end
    end
    if #tb[1] > 0 then
        return tb
    else
        return false
    end
end

function farmer()
    if not getstatus() then
        if checkmail() ~= false then
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Claim"):InvokeServer(unpack(checkmail()))
            return
        end
        if getquest() == false or (getgenv().farmcoins and getquest() == "hatchlastpet") then
            if getcoin() > getgenv().coinsold * 10 then
                getgenv().farmcoins = false
                getgenv().coinsold = 0
            end
            local a = Client.Save.Get()
            local b = Client.RankCmds.GetMaxPurchasableEquipSlots()
            local a2 = a.EggSlotsPurchased
            if (a.MaxPetsEquipped >= b + 4 or not hasunlockzones("Green Forest") or a.MaxPetsEquipped >= 32) and (not hasunlockzones("Backyard") or a2 >= 6 or getrank() < 3) then
                if getlocation() ~= false then
                    if (plr.Character.HumanoidRootPart.Position - getlocation().Position).Magnitude > 30 then
                        plr.Character.HumanoidRootPart.CFrame = getlocation().CFrame * CFrame.new(0,10,0)
                    end
                else
                    plr.Character.HumanoidRootPart.CFrame = getfoderlastmap().CFrame * CFrame.new(0,10,0)
                end
            elseif a.MaxPetsEquipped < b + 4 and hasunlockzones("Green Forest") and a.MaxPetsEquipped < 32 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(691.4805297851562, 16.557279586791992, -251.11878967285156)
                for i =1 , b do
                    local args = {
                        [1] = i
                    }
                    
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("EquipSlotsMachine_RequestPurchase"):InvokeServer(unpack(args))
                end
            elseif hasunlockzones("Backyard") and a2 < 6 and getrank() >= 3 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(537.37207, 16.557354, 80.3434677)
                for i =1, 6 do
                    local args = {
                        [1] = i
                    }
                    
                    game:GetService("ReplicatedStorage").Network.EggHatchSlotsMachine_RequestPurchase:InvokeServer(unpack(args))                        
                end
            end
        else
            if not getgenv().farmcoins then
                if getegg() ~= false then
                    plr.Character.HumanoidRootPart.CFrame = getegg()[3]
                    local a,b = game:GetService("ReplicatedStorage").Network.Eggs_RequestPurchase:InvokeServer(getnameegg(getnumberegg(getegg()[1])),getmaxhatch())
                    print(a,b)
                    if a == false then
                        if string.find(b, "You need more Coins") or getcoin() < 1000 then
                            getgenv().farmcoins = true
                            getgenv().coinsold = getcoin()
                        end
                    end
                else
                    local args = {
                        [1] = "Spawn"
                    }
                    
                    game:GetService("ReplicatedStorage").Network.Teleports_RequestTeleport:InvokeServer(unpack(args))
                end
            end
        end
    end
end

if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Message") then
    game:GetService("Players").LocalPlayer.PlayerGui.Message:Destroy()
end

getgenv().numberdaily = 1

function whatthef()
    local args = {
        [1] = getgenv().numberdaily
    }
    game:GetService("ReplicatedStorage").Network:FindFirstChild("Redeem Free Gift"):InvokeServer(unpack(args))
    getgenv().numberdaily = getgenv().numberdaily + 1
    if getgenv().numberdaily >= 12 then
        getgenv().numberdaily = 1
    end
end

function click2(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
end

function click3(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,false,a,1)
end

function detc4()
    click2(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
    click3(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
end

getgenv().numberk = 1

function collectrank()
    local args = {
        [1] = getgenv().numberk
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Ranks_ClaimReward"):FireServer(unpack(args))
    getgenv().numberk = getgenv().numberk + 1
    if getgenv().numberk >= 30 then
        getgenv().numberk = 1
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    spawn(function()
	    click()
    end)
end)

spawn(function()
    while true do wait()
        pcall(saveconfig)
        pcall(resettime)
    end
end)

spawn(function()
    while true do wait()
        pcall(farmer)
    end
end)

spawn(function()
    while true do wait()
        pcall(autousegiftbag)
    end
end)

spawn(function()
    while true do wait()
        pcall(unlockmapattk)
    end
end)

spawn(function()
    while true do wait()
        local a,b = pcall(autosubquest)
        print(a,b)
    end
end)

getgenv().pressE = false

function pressEA()
    if getgenv().pressE then
        enuma()
        enuma2()
    end
end

game:GetService("RunService").Stepped:Connect(function()
    pcall(farmer)
    pcall(whatthef)
    pcall(collectrank)
    pcall(detc4)
end)
