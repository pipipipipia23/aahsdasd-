-- Thay đổi URL webhook của bạn ở đây
local WEBHOOK_URL = "https://discord.com/api/webhooks/1366881018694336613/831WzsDAfTatNR8BYSv0UmNYMDeaIofv_kkXvpAKlL8R4N6mUG5C2KkTDp32GIvzoCz-"

local HttpService = game:GetService("HttpService")

local plr = game.Players.LocalPlayer

-- Connect event

plr.Idled:Connect(function()
    virtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    task.wait(0.25)
    virtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

pcall(function()
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    UserSettings().GameSettings.MasterVolume = 0
    UserSettings().GameSettings.SavedQualitySetting = Enum.SavedQualitySetting.QualityLevel1
end)

print("Starting One Piece Mythical Script...")

local function hasDevilFruit()
    return workspace.UserData["User_" .. plr.UserId].Data.DevilFruit.Value ~= "None"
end

local function hasLuckFruit()
    return workspace:FindFirstChild("Luck Fruit")
end

-- Function to handle luck fruit consumption
local function consumeLuckFruit()
    print("Found Luck Fruit - Starting consumption process")
    
    while hasLuckFruit() and not hasDevilFruit() do
        task.wait(2)
        pcall(function()
            -- Handle loading screen
            if plr.PlayerGui.Load.Frame.Visible then
                task.wait(3)
                getconnections(plr.PlayerGui.Load.Frame.Load.MouseButton1Click)[1].Function()
                return
            end
            
            -- Consume fruit if in backpack
            local fruitTool = plr.Backpack:FindFirstChild("Luck Fruit")
            if fruitTool then
                plr.Character.Humanoid:EquipTool(fruitTool)
                task.wait(1)
                game:GetService("VirtualUser"):ClickButton1(Vector2.new(99999, 99999))
                task.wait(1)
                getconnections(plr.PlayerGui.GiverGUI.ImageLabel.Frame["1"].MouseButton1Click)[1].Function()
                task.wait(3)
            else
                -- Teleport to and collect fruit
                local luckFruit = workspace:FindFirstChild("Luck Fruit")
                if luckFruit and luckFruit:FindFirstChild("Main1") then
                    plr.Character.HumanoidRootPart.CFrame = luckFruit.Main1.CFrame
                    task.wait(0.5)
                    fireclickdetector(luckFruit.Main1.ClickDetector)
                    task.wait(0.5)
                end
            end
        end)
    end
    
    print("Luck Fruit consumption completed or no longer available")
end

-- Main logic
if hasLuckFruit() and not hasDevilFruit() then
    consumeLuckFruit()
elseif not hasLuckFruit() and not hasDevilFruit() then
    print("No Luck Fruit found - Starting server hop to find one")
    
    -- Server hopping helper functions
    local function decode(data)
        return data and HttpService:JSONDecode(data) or {}
    end

    local function encode(data)
        return data and HttpService:JSONEncode(data) or "{}"
    end

    local function getCachedServers()
        if not isfile("Server_Shared.txt") then return false end
        
        local success, data = pcall(function()
            return decode(readfile("Server_Shared.txt"))
        end)
        
        if not success or not data.timestamp then return false end
        
        -- Cache valid for 3 minutes
        if tick() - data.timestamp >= 180 then return false end
        
        return data
    end

    local function shuffleAndTeleport(servers)
        local validServers = {}
        
        -- Filter out current server
        for _, server in ipairs(servers) do
            if server.id ~= game.JobId then
                table.insert(validServers, server.id)
            end
        end
        
        if #validServers == 0 then
            print("No valid servers found - Random teleport")
            game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
            return
        end
        
        -- Shuffle servers for random selection
        for i = #validServers, 2, -1 do
            local j = math.random(i)
            validServers[i], validServers[j] = validServers[j], validServers[i]
        end
        
        -- Try teleporting to first server
        local targetServer = validServers[1]
        print("Teleporting to server: " .. targetServer)
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, targetServer)
        
        -- Fallback after delay
        task.wait(5)
        game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
    end

    local function startServerHop()
        local success, result = pcall(function()
            local cachedData = getCachedServers()
            
            if cachedData and cachedData.serverlist then
                print("Using cached server list")
                return cachedData.serverlist
            end
            
            print("Fetching fresh server list...")
            local response = game:HttpGet('https://games.roblox.com/v1/games/137595477352660/servers/Public?sortOrder=Asc&excludeFullGames=true&limit=100')
            local serverData = decode(response)
            
            if serverData and serverData.data and #serverData.data > 0 then
                local cacheData = {
                    timestamp = tick(),
                    serverlist = serverData.data
                }
                writefile("Server_Shared.txt", encode(cacheData))
                return serverData.data
            end
            
            return {}
        end)
        
        if success and result and #result > 0 then
            shuffleAndTeleport(result)
        else
            print("Failed to get server list - Random teleport")
            task.wait(3)
            game:GetService("TeleportService"):Teleport(game.PlaceId, plr)
        end
    end
    
    startServerHop()
else
    print("Player already has Devil Fruit - Script completed")
end

pcall(function()
    pcall(function() 
        plr.PlayerScripts.Scripts:Destroy()
    end)
    
    for k,v in plr.PlayerGui:GetChildren() do
        v:Destroy()
    end
end)

while true do task.wait(5)
    local a,b = pcall(function()
        setfpscap(1)
        if workspace.UserData["User_" .. plr.UserId].Data.CompassTokens.Value > 0 then
            if workspace.UserData["User_" .. plr.UserId].Data.DevilFruit.Value ~= "None" then
                writefile(plr.Name..".txt", "Completed-" .. "DoneCompassLuck")
            else
                writefile(plr.Name..".txt", "Completed-" .. "DoneCompass")
            end
        end
    end)
end
